name: workflow-docker-manual

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Enter tag name for test/dev image'
        default: 'test'

jobs:
  gcr-dockerhub-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU for multi-arch support
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: DEBUG Show Runners environment
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_wait_seconds: 120
          command: |
            export
      - name: Generate temporary tag name
        shell: bash
        run: |
          test_tag=$(date +%Y%m%d%H%M%S)
          echo "[debug] Generated test tag name is '${test_tag}'"
          echo "test_tag=$test_tag" >> $GITHUB_OUTPUT
        id: generate_temporary_tag_name
      - name: Build amd64 image and export to Docker for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.generate_temporary_tag_name.outputs.test_tag }}
          build-args: |
            RELEASETAG=${{ github.event.inputs.tags }}
      - name: Build multi-arch Docker image, tag and push to registries
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ github.repository }}:${{ github.event.inputs.tags }} }}
          build-args: |
            RELEASETAG=${{ github.event.inputs.tags }}
